---

- name: get cell_uuid if cell already exists
  shell: su nova -s /bin/sh -c "nova-manage cell_v2 list_cells | grep -w {{ osdm_os_nova_cell_name }} | awk '{print \$4}'"
  register: cell_uuid

# Failed if There are existing hosts mapped to cell with uuid xxxx
- name: delete cell if cell already exists
  shell: su nova -s /bin/sh -c "nova-manage cell_v2 delete_cell --cell_uuid {{ cell_uuid.stdout }}"
  when: cell_uuid.stdout

- name: add cell information to nova-api/cell_mappings table
  shell: su nova -s /bin/sh -c "nova-manage cell_v2 create_cell --verbose --name {{ osdm_os_nova_cell_name }} --database_connection mysql+pymysql://{{ osdm_os_nova_db_user }}:{{ osdm_os_nova_db_pass }}@{{ osdm_cell_mysql_mgmt_ip }}/nova_{{ osdm_os_nova_cell_name }} --transport-url rabbit://{{ osdm_mq_os_user }}:{{ osdm_mq_os_pass }}@{{ osdm_cell_mq_mgmt_ip }}:5672/"
  delegate_to: "{{ groups['os-controller'][0] }}"
  # when: "inventory_hostname != groups['os-controller'][0]"
  run_once: yes
