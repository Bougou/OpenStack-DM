[DEFAULT]
debug = {{ osdm_log_debug }}
my_ip = {{ osdm_os_mgmt_if_ip }}
control_exchange = ironic
rpc_backend  = rabbit
auth_strategy = keystone
enabled_drivers = pxe_ipmitool
enabled_network_interfaces = noop,flat,neutron
default_network_interface = neutron

[agent]
manage_agent_boot = true
# memory_consumed_by_agent = 0
stream_raw_images = true
post_deploy_get_power_state_retries = 6
post_deploy_get_power_state_retry_interval = 5
agent_api_version = v1
deploy_logs_collect = on_failure
deploy_logs_storage_backend = local
deploy_logs_local_path = /var/log/ironic/deploy
deploy_logs_swift_days_to_expire = 30

[api]
host_ip = {{ osdm_os_access_mgmt_vip }}
port = 6385
max_limit = 1000


[dhcp]
dhcp_provider = neutron

[conductor]
api_url = http://{{ osdm_os_ironic_mgmt_ip }}:6385
deploy_callback_timeout = 1800
force_power_state_during_sync = true
send_sensor_data = false
configdrive_use_swift = false

[console]
terminal = shellinaboxd

[database]
connection = mysql://{{ osdm_os_ironic_db_user }}:{{ osdm_os_ironic_db_pass }}@{{ osdm_mysql_mgmt_ip }}/ironic

[glance]
glance_host = {{ osdm_os_glance_mgmt_ip }}
auth_uri = http://{{ osdm_os_keystone_api_ip }}:5000/
auth_url = http://{{ osdm_os_keystone_mgmt_ip }}:35357/
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = glance
password = {{ osdm_user_service_pass }}
{# memcache_servers = {% for _host in groups['os-controller'] %}{{ hostvars[_host]["osdm_os_mgmt_if_ip"] }}:11211{% if not loop.last %},{% endif %}{% endfor %} #}

memcache_servers = {{ osdm_os_access_mgmt_vip }}:11211


[neutron]
url = http://{{ osdm_os_neutron_mgmt_ip }}:9696
auth_uri = http://{{ osdm_os_keystone_api_ip }}:5000/
auth_url = http://{{ osdm_os_keystone_mgmt_ip }}:35357/
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
password = {{ osdm_user_service_pass }}
{# memcache_servers = {% for _host in groups['os-controller'] %}{{ hostvars[_host]["osdm_os_mgmt_if_ip"] }}:11211{% if not loop.last %},{% endif %}{% endfor %} #}

memcache_servers = {{ osdm_os_access_mgmt_vip }}:11211


[nova]
auth_uri = http://{{ osdm_os_keystone_api_ip }}:5000/
auth_url = http://{{ osdm_os_keystone_mgmt_ip }}:35357/
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = nova
password = {{ osdm_user_service_pass }}
memcache_servers = {% for _host in groups['os-controller'] %}{{ hostvars[_host]["osdm_os_mgmt_if_ip"] }}:11211{% if not loop.last %},{% endif %}{% endfor %}
# memcache_servers = osdm_os_access_mgmt_vip:11211

[swift]
auth_uri = http://{{ osdm_os_keystone_api_ip }}:5000/
auth_url = http://{{ osdm_os_keystone_mgmt_ip }}:35357/
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = swift
password = {{ osdm_user_service_pass }}
{# memcache_servers = {% for _host in groups['os-controller'] %}{{ hostvars[_host]["osdm_os_mgmt_if_ip"] }}:11211{% if not loop.last %},{% endif %}{% endfor %} #}

memcache_servers = {{ osdm_os_access_mgmt_vip }}:11211


[oslo_concurrency]
lock_path = /var/lib/ironic/tmp

[oslo_messaging_notifications]
driver = messagingv2

[oslo_messaging_rabbit]
rabbit_host = {{ osdm_mq_mgmt_ip }}
rabbit_userid = {{ osdm_mq_os_user }}
rabbit_password = {{ osdm_mq_os_pass }}
rabbit_retry_interval = 1
rabbit_retry_backoff = 2
rabbit_max_retries = 0
rabbit_ha_queues = true
rabbit_durable_queues = true

[keystone_authtoken]
# public Identity API endpoint
auth_uri = http://{{ osdm_os_keystone_api_ip }}:5000/
# admin Identity API endpoint
auth_url = http://{{ osdm_os_keystone_mgmt_ip }}:35357/
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = ironic
password = {{ osdm_user_service_pass }}
{# memcache_servers = {% for _host in groups['os-controller'] %}{{ hostvars[_host]["osdm_os_mgmt_if_ip"] }}:11211{% if not loop.last %},{% endif %}{% endfor %} #}

memcache_servers = {{ osdm_os_access_mgmt_vip }}:11211


[inspector]
enabled = true
# endpoint where the ironic-inspector runs
service_url = {{ osdm_os_access_mgmt_vip }}

# public Identity API endpoint
auth_uri = http://{{ osdm_os_keystone_api_ip }}:5000/
# admin Identity API endpoint
auth_url = http://{{ osdm_os_keystone_mgmt_ip }}:35357/
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = ironic
password = {{ osdm_user_service_pass }}
{# memcache_servers = {% for _host in groups['os-controller'] %}{{ hostvars[_host]["osdm_os_mgmt_if_ip"] }}:11211{% if not loop.last %},{% endif %}{% endfor %} #}

memcache_servers = {{ osdm_os_access_mgmt_vip }}:11211


[service_catalog]
# public Identity API endpoint
auth_uri = http://{{ osdm_os_keystone_api_ip }}:5000/
# admin Identity API endpoint
auth_url = http://{{ osdm_os_keystone_mgmt_ip }}:35357/
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = ironic
password = {{ osdm_user_service_pass }}
{# memcache_servers = {% for _host in groups['os-controller'] %}{{ hostvars[_host]["osdm_os_mgmt_if_ip"] }}:11211{% if not loop.last %},{% endif %}{% endfor %} #}

memcache_servers = {{ osdm_os_access_mgmt_vip }}:11211


[console]
terminal = shellinaboxd


# for pxe_* driver
[pxe]
pxe_append_params = nofb nomodeset vga=normal console=tty0 console=ttyS0,115200n8

pxe_bootfile_name = pxelinux.0
uefi_pxe_bootfile_name = bootx64.efi
pxe_config_template = /usr/lib/python2.7/site-packages/ironic/drivers/modules/pxe_config.template
uefi_pxe_config_template = /usr/lib/python2.7/site-packages/ironic/drivers/modules/pxe_grub_config.template


tftp_root = /var/lib/tftpboot
tftp_server = {{ osdm_os_mgmt_if_ip }}
tftp_master_path = /var/lib/tftpboot/master_images

ipxe_enabled = false
# ipxe_use_swift = false
# ipxe_boot_script = /usr/lib/python2.7/site-packages/ironic/drivers/modules/boot.ipxe
# pxe_bootfile_name = undionly.kpxe
# uefi_pxe_bootfile_name = ipxe.efi
# pxe_config_template = /usr/lib/python2.7/site-packages/ironic/drivers/modules/ipxe_config.template
# uefi_pxe_config_template = /usr/lib/python2.7/site-packages/ironic/drivers/modules/ipxe_config.template

[deploy]
http_url = {{ osdm_os_mgmt_if_ip }}:8080
http_root = /httpboot

[metrics]
agent_backend = noop
backend = noop

[metrics_statsd]
agent_statsd_host = {{ osdm_os_access_mgmt_vip }}
agent_statsd_port = 8125
statsd_host = {{ osdm_os_access_mgmt_vip }}
statsd_port = 8125

[ipmi]
retry_timeout = 120
min_command_interval = 5

[iscsi]
portal_port = 3260

[snmp]
powert_timeout = 10
reboot_delay = 0

[ssh]
libvirt_uri = qemu:///system
get_vm_name_attempts = 3
get_vm_name_retry_interval = 3

[ircmc]
remote_image_share_root = /remote_image_share_root
remote_image_server = {{ osdm_os_mgmt_if_ip }}
remote_image_user_name = share
remote_image_user_password = 
remote_image_user_domain = 
port = 443
auth_method = basic
client_timeout = 60
sensor_method = ipmitool
snmp_version = v2c
snmp_port = 161
snmp_community = public
snmp_security =


[swift]
[virtualbox]
[cimc]
[cisco_ucs]

[drac]
[iboot]
[ilo]
[oneview]
[seamicro]

